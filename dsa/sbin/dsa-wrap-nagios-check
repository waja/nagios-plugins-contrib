#!/bin/sh

# Copyright 2017 Peter Palfrader
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# wrap a nagios check and write a status-file to be used with dsa-check-statusfile

set -u

STATUSDIR=/var/cache/dsa/nagios

usage(){
  ret=$1

  cat <<EOF
$0: usage:
  $0 <options> <nagios-check> [nagios-check-options]

  Calls nagios-check and stores its result in a state
  file in status-dir.  The state file is named after
  the nagios check (but can be overridden with -s).

  -S <dir>      state dir ($STATUSDIR)
  -s <filename> state file name
  -h            print this help
EOF

  exit $ret
}


while getopts S:s:h opt ; do
  case "$opt" in
    S) STATUSDIR="$OPTARG" ;;
    s) STATUSFILE="$OPTARG";;
    h) usage 0 ;;
    ?) usage 1 ;;
  esac
done
shift $(($OPTIND - 1))
if [ "$#" = 0 ]; then
  usage 1 >&2
fi

if [ -z "${STATUSFILE:-}" ]; then
  STATUSFILE="$(basename "$1")"
fi

if ! [ -d "$STATUSDIR" ]; then
  echo >&2 "status directory $STATUSDIR does not exist."
  exit 3
fi

tmp=`mktemp`
trap "rm -f '$tmp'" exit
"$@" > "$tmp" 2>&1
result="$?"
case "$result" in
  0)
    st="OK"
    ;;
  1)
    st="WARNING"
    ;;
  2)
    st="CRITICAL"
    ;;
  *)
    st="UNKNOWN"
    ;;
esac
(echo "$st"; cat "$tmp") > "$STATUSDIR/$STATUSFILE"
